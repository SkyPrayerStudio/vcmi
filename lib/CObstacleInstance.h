#pragma once
#include "BattleHex.h"

struct CObstacleInfo;

struct DLL_LINKAGE CObstacleInstance
{
	si32 uniqueID;
	si32 ID; //ID of obstacle (defines type of it)
	BattleHex pos; //position on battlefield

	enum EObstacleType
	{
		//ABSOLUTE needs an underscore because it's a Win 
		USUAL, ABSOLUTE_OBSTACLE, QUICKSAND, LAND_MINE, FORCE_FIELD, FIRE_WALL
	};

	ui8 obstacleType; //if true, then position is meaningless

	//used only for spell-created obtsacles
	si8 turnsRemaining;
	si8 spellLevel;
	si8 casterSide; //0 - obstacle created by attacker; 1 - by defender
	si8 visibleForAnotherSide;

	CObstacleInstance();
	bool spellGenerated() const;
	const CObstacleInfo &getInfo() const; //allowed only when not generated by spell (usual or absolute)
	std::vector<BattleHex> getBlocked() const;
	std::vector<BattleHex> getAffectedTiles() const; //to be  used with quicksands / fire walls /land mines
	
	bool visibleForSide(ui8 side) const; //0 attacker

	template <typename Handler> void serialize(Handler &h, const int version)
	{
		h & ID & pos & obstacleType & uniqueID;
		h & turnsRemaining & spellLevel & casterSide & visibleForAnotherSide;
	}
};